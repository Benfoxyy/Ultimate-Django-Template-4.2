services:

  db:
    container_name: db
    image: postgres:alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    ports:
      - '5432:5432'
    expose:
      - 5432

  backend:
    build:
      context: .
      dockerfile: dockerfiles/dev/django/Dockerfile
    container_name: backend
    command: "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./core:/app
    ports:
      - '8000:8000'
    environment:
      - SECRET_KEY=test
      - DEBUG=True
    restart: always
    depends_on:
      - db
      - redis

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning

  worker:
    build:
      context: .
      dockerfile: dockerfiles/dev/django/Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__Urls=http://*:80
      - ServerOptions__HostName=smtp4dev

volumes:
  smtp4dev-data:
